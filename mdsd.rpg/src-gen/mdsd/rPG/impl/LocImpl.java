/**
 * generated by Xtext 2.21.0
 */
package mdsd.rPG.impl;

import mdsd.rPG.ActualNumbers;
import mdsd.rPG.Loc;
import mdsd.rPG.RPGPackage;
import mdsd.rPG.Team;
import mdsd.rPG.Type;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Loc</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link mdsd.rPG.impl.LocImpl#getName <em>Name</em>}</li>
 *   <li>{@link mdsd.rPG.impl.LocImpl#getTipe <em>Tipe</em>}</li>
 *   <li>{@link mdsd.rPG.impl.LocImpl#getEff <em>Eff</em>}</li>
 *   <li>{@link mdsd.rPG.impl.LocImpl#getTeam <em>Team</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LocImpl extends MinimalEObjectImpl.Container implements Loc
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getTipe() <em>Tipe</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTipe()
   * @generated
   * @ordered
   */
  protected Type tipe;

  /**
   * The cached value of the '{@link #getEff() <em>Eff</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEff()
   * @generated
   * @ordered
   */
  protected ActualNumbers eff;

  /**
   * The cached value of the '{@link #getTeam() <em>Team</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTeam()
   * @generated
   * @ordered
   */
  protected Team team;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LocImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RPGPackage.Literals.LOC;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RPGPackage.LOC__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Type getTipe()
  {
    if (tipe != null && tipe.eIsProxy())
    {
      InternalEObject oldTipe = (InternalEObject)tipe;
      tipe = (Type)eResolveProxy(oldTipe);
      if (tipe != oldTipe)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, RPGPackage.LOC__TIPE, oldTipe, tipe));
      }
    }
    return tipe;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Type basicGetTipe()
  {
    return tipe;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTipe(Type newTipe)
  {
    Type oldTipe = tipe;
    tipe = newTipe;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RPGPackage.LOC__TIPE, oldTipe, tipe));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ActualNumbers getEff()
  {
    return eff;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEff(ActualNumbers newEff, NotificationChain msgs)
  {
    ActualNumbers oldEff = eff;
    eff = newEff;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RPGPackage.LOC__EFF, oldEff, newEff);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEff(ActualNumbers newEff)
  {
    if (newEff != eff)
    {
      NotificationChain msgs = null;
      if (eff != null)
        msgs = ((InternalEObject)eff).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RPGPackage.LOC__EFF, null, msgs);
      if (newEff != null)
        msgs = ((InternalEObject)newEff).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RPGPackage.LOC__EFF, null, msgs);
      msgs = basicSetEff(newEff, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RPGPackage.LOC__EFF, newEff, newEff));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Team getTeam()
  {
    if (team != null && team.eIsProxy())
    {
      InternalEObject oldTeam = (InternalEObject)team;
      team = (Team)eResolveProxy(oldTeam);
      if (team != oldTeam)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, RPGPackage.LOC__TEAM, oldTeam, team));
      }
    }
    return team;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Team basicGetTeam()
  {
    return team;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTeam(Team newTeam)
  {
    Team oldTeam = team;
    team = newTeam;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RPGPackage.LOC__TEAM, oldTeam, team));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RPGPackage.LOC__EFF:
        return basicSetEff(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RPGPackage.LOC__NAME:
        return getName();
      case RPGPackage.LOC__TIPE:
        if (resolve) return getTipe();
        return basicGetTipe();
      case RPGPackage.LOC__EFF:
        return getEff();
      case RPGPackage.LOC__TEAM:
        if (resolve) return getTeam();
        return basicGetTeam();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RPGPackage.LOC__NAME:
        setName((String)newValue);
        return;
      case RPGPackage.LOC__TIPE:
        setTipe((Type)newValue);
        return;
      case RPGPackage.LOC__EFF:
        setEff((ActualNumbers)newValue);
        return;
      case RPGPackage.LOC__TEAM:
        setTeam((Team)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RPGPackage.LOC__NAME:
        setName(NAME_EDEFAULT);
        return;
      case RPGPackage.LOC__TIPE:
        setTipe((Type)null);
        return;
      case RPGPackage.LOC__EFF:
        setEff((ActualNumbers)null);
        return;
      case RPGPackage.LOC__TEAM:
        setTeam((Team)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RPGPackage.LOC__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case RPGPackage.LOC__TIPE:
        return tipe != null;
      case RPGPackage.LOC__EFF:
        return eff != null;
      case RPGPackage.LOC__TEAM:
        return team != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //LocImpl
