/**
 * generated by Xtext 2.21.0
 */
package mdsd.rPG.impl;

import java.util.Collection;

import mdsd.rPG.ActualNumbers;
import mdsd.rPG.RPGPackage;
import mdsd.rPG.Relations;
import mdsd.rPG.Type;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Relations</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link mdsd.rPG.impl.RelationsImpl#getType <em>Type</em>}</li>
 *   <li>{@link mdsd.rPG.impl.RelationsImpl#getSyn <em>Syn</em>}</li>
 *   <li>{@link mdsd.rPG.impl.RelationsImpl#getEff <em>Eff</em>}</li>
 *   <li>{@link mdsd.rPG.impl.RelationsImpl#getIneff <em>Ineff</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RelationsImpl extends DeclarationImpl implements Relations
{
  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected EList<Type> type;

  /**
   * The cached value of the '{@link #getSyn() <em>Syn</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSyn()
   * @generated
   * @ordered
   */
  protected ActualNumbers syn;

  /**
   * The cached value of the '{@link #getEff() <em>Eff</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEff()
   * @generated
   * @ordered
   */
  protected ActualNumbers eff;

  /**
   * The cached value of the '{@link #getIneff() <em>Ineff</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIneff()
   * @generated
   * @ordered
   */
  protected ActualNumbers ineff;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RelationsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RPGPackage.Literals.RELATIONS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Type> getType()
  {
    if (type == null)
    {
      type = new EObjectContainmentEList<Type>(Type.class, this, RPGPackage.RELATIONS__TYPE);
    }
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ActualNumbers getSyn()
  {
    return syn;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSyn(ActualNumbers newSyn, NotificationChain msgs)
  {
    ActualNumbers oldSyn = syn;
    syn = newSyn;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RPGPackage.RELATIONS__SYN, oldSyn, newSyn);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSyn(ActualNumbers newSyn)
  {
    if (newSyn != syn)
    {
      NotificationChain msgs = null;
      if (syn != null)
        msgs = ((InternalEObject)syn).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RPGPackage.RELATIONS__SYN, null, msgs);
      if (newSyn != null)
        msgs = ((InternalEObject)newSyn).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RPGPackage.RELATIONS__SYN, null, msgs);
      msgs = basicSetSyn(newSyn, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RPGPackage.RELATIONS__SYN, newSyn, newSyn));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ActualNumbers getEff()
  {
    return eff;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEff(ActualNumbers newEff, NotificationChain msgs)
  {
    ActualNumbers oldEff = eff;
    eff = newEff;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RPGPackage.RELATIONS__EFF, oldEff, newEff);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEff(ActualNumbers newEff)
  {
    if (newEff != eff)
    {
      NotificationChain msgs = null;
      if (eff != null)
        msgs = ((InternalEObject)eff).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RPGPackage.RELATIONS__EFF, null, msgs);
      if (newEff != null)
        msgs = ((InternalEObject)newEff).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RPGPackage.RELATIONS__EFF, null, msgs);
      msgs = basicSetEff(newEff, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RPGPackage.RELATIONS__EFF, newEff, newEff));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ActualNumbers getIneff()
  {
    return ineff;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIneff(ActualNumbers newIneff, NotificationChain msgs)
  {
    ActualNumbers oldIneff = ineff;
    ineff = newIneff;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RPGPackage.RELATIONS__INEFF, oldIneff, newIneff);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIneff(ActualNumbers newIneff)
  {
    if (newIneff != ineff)
    {
      NotificationChain msgs = null;
      if (ineff != null)
        msgs = ((InternalEObject)ineff).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RPGPackage.RELATIONS__INEFF, null, msgs);
      if (newIneff != null)
        msgs = ((InternalEObject)newIneff).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RPGPackage.RELATIONS__INEFF, null, msgs);
      msgs = basicSetIneff(newIneff, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RPGPackage.RELATIONS__INEFF, newIneff, newIneff));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RPGPackage.RELATIONS__TYPE:
        return ((InternalEList<?>)getType()).basicRemove(otherEnd, msgs);
      case RPGPackage.RELATIONS__SYN:
        return basicSetSyn(null, msgs);
      case RPGPackage.RELATIONS__EFF:
        return basicSetEff(null, msgs);
      case RPGPackage.RELATIONS__INEFF:
        return basicSetIneff(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RPGPackage.RELATIONS__TYPE:
        return getType();
      case RPGPackage.RELATIONS__SYN:
        return getSyn();
      case RPGPackage.RELATIONS__EFF:
        return getEff();
      case RPGPackage.RELATIONS__INEFF:
        return getIneff();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RPGPackage.RELATIONS__TYPE:
        getType().clear();
        getType().addAll((Collection<? extends Type>)newValue);
        return;
      case RPGPackage.RELATIONS__SYN:
        setSyn((ActualNumbers)newValue);
        return;
      case RPGPackage.RELATIONS__EFF:
        setEff((ActualNumbers)newValue);
        return;
      case RPGPackage.RELATIONS__INEFF:
        setIneff((ActualNumbers)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RPGPackage.RELATIONS__TYPE:
        getType().clear();
        return;
      case RPGPackage.RELATIONS__SYN:
        setSyn((ActualNumbers)null);
        return;
      case RPGPackage.RELATIONS__EFF:
        setEff((ActualNumbers)null);
        return;
      case RPGPackage.RELATIONS__INEFF:
        setIneff((ActualNumbers)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RPGPackage.RELATIONS__TYPE:
        return type != null && !type.isEmpty();
      case RPGPackage.RELATIONS__SYN:
        return syn != null;
      case RPGPackage.RELATIONS__EFF:
        return eff != null;
      case RPGPackage.RELATIONS__INEFF:
        return ineff != null;
    }
    return super.eIsSet(featureID);
  }

} //RelationsImpl
