/*
 * generated by Xtext 2.21.0
 */
grammar InternalRPG;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package mdsd.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package mdsd.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import mdsd.services.RPGGrammarAccess;

}
@parser::members {
	private RPGGrammarAccess grammarAccess;

	public void setGrammarAccess(RPGGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSystemRPG
entryRuleSystemRPG
:
{ before(grammarAccess.getSystemRPGRule()); }
	 ruleSystemRPG
{ after(grammarAccess.getSystemRPGRule()); } 
	 EOF 
;

// Rule SystemRPG
ruleSystemRPG 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSystemRPGAccess().getGroup()); }
		(rule__SystemRPG__Group__0)
		{ after(grammarAccess.getSystemRPGAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
		(rule__Declaration__Alternatives)
		{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEffects
entryRuleEffects
:
{ before(grammarAccess.getEffectsRule()); }
	 ruleEffects
{ after(grammarAccess.getEffectsRule()); } 
	 EOF 
;

// Rule Effects
ruleEffects 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEffectsAccess().getGroup()); }
		(rule__Effects__Group__0)
		{ after(grammarAccess.getEffectsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEffect
entryRuleEffect
:
{ before(grammarAccess.getEffectRule()); }
	 ruleEffect
{ after(grammarAccess.getEffectRule()); } 
	 EOF 
;

// Rule Effect
ruleEffect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEffectAccess().getGroup()); }
		(rule__Effect__Group__0)
		{ after(grammarAccess.getEffectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuff
entryRuleBuff
:
{ before(grammarAccess.getBuffRule()); }
	 ruleBuff
{ after(grammarAccess.getBuffRule()); } 
	 EOF 
;

// Rule Buff
ruleBuff 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuffAccess().getGroup()); }
		(rule__Buff__Group__0)
		{ after(grammarAccess.getBuffAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMoveE
entryRuleMoveE
:
{ before(grammarAccess.getMoveERule()); }
	 ruleMoveE
{ after(grammarAccess.getMoveERule()); } 
	 EOF 
;

// Rule MoveE
ruleMoveE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMoveEAccess().getGroup()); }
		(rule__MoveE__Group__0)
		{ after(grammarAccess.getMoveEAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAfterE
entryRuleAfterE
:
{ before(grammarAccess.getAfterERule()); }
	 ruleAfterE
{ after(grammarAccess.getAfterERule()); } 
	 EOF 
;

// Rule AfterE
ruleAfterE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAfterEAccess().getGroup()); }
		(rule__AfterE__Group__0)
		{ after(grammarAccess.getAfterEAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributes
entryRuleAttributes
:
{ before(grammarAccess.getAttributesRule()); }
	 ruleAttributes
{ after(grammarAccess.getAttributesRule()); } 
	 EOF 
;

// Rule Attributes
ruleAttributes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributesAccess().getGroup()); }
		(rule__Attributes__Group__0)
		{ after(grammarAccess.getAttributesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocations
entryRuleLocations
:
{ before(grammarAccess.getLocationsRule()); }
	 ruleLocations
{ after(grammarAccess.getLocationsRule()); } 
	 EOF 
;

// Rule Locations
ruleLocations 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocationsAccess().getGroup()); }
		(rule__Locations__Group__0)
		{ after(grammarAccess.getLocationsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoc
entryRuleLoc
:
{ before(grammarAccess.getLocRule()); }
	 ruleLoc
{ after(grammarAccess.getLocRule()); } 
	 EOF 
;

// Rule Loc
ruleLoc 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocAccess().getGroup()); }
		(rule__Loc__Group__0)
		{ after(grammarAccess.getLocAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelations
entryRuleRelations
:
{ before(grammarAccess.getRelationsRule()); }
	 ruleRelations
{ after(grammarAccess.getRelationsRule()); } 
	 EOF 
;

// Rule Relations
ruleRelations 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationsAccess().getGroup()); }
		(rule__Relations__Group__0)
		{ after(grammarAccess.getRelationsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationModifiers
entryRuleRelationModifiers
:
{ before(grammarAccess.getRelationModifiersRule()); }
	 ruleRelationModifiers
{ after(grammarAccess.getRelationModifiersRule()); } 
	 EOF 
;

// Rule RelationModifiers
ruleRelationModifiers 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationModifiersAccess().getGroup()); }
		(rule__RelationModifiers__Group__0)
		{ after(grammarAccess.getRelationModifiersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getGroup()); }
		(rule__Type__Group__0)
		{ after(grammarAccess.getTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeExpression
entryRuleTypeExpression
:
{ before(grammarAccess.getTypeExpressionRule()); }
	 ruleTypeExpression
{ after(grammarAccess.getTypeExpressionRule()); } 
	 EOF 
;

// Rule TypeExpression
ruleTypeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeExpressionAccess().getGroup()); }
		(rule__TypeExpression__Group__0)
		{ after(grammarAccess.getTypeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMoves
entryRuleMoves
:
{ before(grammarAccess.getMovesRule()); }
	 ruleMoves
{ after(grammarAccess.getMovesRule()); } 
	 EOF 
;

// Rule Moves
ruleMoves 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMovesAccess().getGroup()); }
		(rule__Moves__Group__0)
		{ after(grammarAccess.getMovesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMove
entryRuleMove
:
{ before(grammarAccess.getMoveRule()); }
	 ruleMove
{ after(grammarAccess.getMoveRule()); } 
	 EOF 
;

// Rule Move
ruleMove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMoveAccess().getGroup()); }
		(rule__Move__Group__0)
		{ after(grammarAccess.getMoveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMEffect
entryRuleMEffect
:
{ before(grammarAccess.getMEffectRule()); }
	 ruleMEffect
{ after(grammarAccess.getMEffectRule()); } 
	 EOF 
;

// Rule MEffect
ruleMEffect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMEffectAccess().getGroup()); }
		(rule__MEffect__Group__0)
		{ after(grammarAccess.getMEffectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBEffect
entryRuleBEffect
:
{ before(grammarAccess.getBEffectRule()); }
	 ruleBEffect
{ after(grammarAccess.getBEffectRule()); } 
	 EOF 
;

// Rule BEffect
ruleBEffect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBEffectAccess().getGroup()); }
		(rule__BEffect__Group__0)
		{ after(grammarAccess.getBEffectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAEffect
entryRuleAEffect
:
{ before(grammarAccess.getAEffectRule()); }
	 ruleAEffect
{ after(grammarAccess.getAEffectRule()); } 
	 EOF 
;

// Rule AEffect
ruleAEffect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAEffectAccess().getGroup()); }
		(rule__AEffect__Group__0)
		{ after(grammarAccess.getAEffectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEType
entryRuleEType
:
{ before(grammarAccess.getETypeRule()); }
	 ruleEType
{ after(grammarAccess.getETypeRule()); } 
	 EOF 
;

// Rule EType
ruleEType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getETypeAccess().getGroup()); }
		(rule__EType__Group__0)
		{ after(grammarAccess.getETypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeValues
entryRuleAttributeValues
:
{ before(grammarAccess.getAttributeValuesRule()); }
	 ruleAttributeValues
{ after(grammarAccess.getAttributeValuesRule()); } 
	 EOF 
;

// Rule AttributeValues
ruleAttributeValues 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeValuesAccess().getGroup()); }
		(rule__AttributeValues__Group__0)
		{ after(grammarAccess.getAttributeValuesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAltAttribute
entryRuleAltAttribute
:
{ before(grammarAccess.getAltAttributeRule()); }
	 ruleAltAttribute
{ after(grammarAccess.getAltAttributeRule()); } 
	 EOF 
;

// Rule AltAttribute
ruleAltAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAltAttributeAccess().getGroup()); }
		(rule__AltAttribute__Group__0)
		{ after(grammarAccess.getAltAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditionalRule
entryRuleAdditionalRule
:
{ before(grammarAccess.getAdditionalRuleRule()); }
	 ruleAdditionalRule
{ after(grammarAccess.getAdditionalRuleRule()); } 
	 EOF 
;

// Rule AdditionalRule
ruleAdditionalRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionalRuleAccess().getGroup()); }
		(rule__AdditionalRule__Group__0)
		{ after(grammarAccess.getAdditionalRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditionalBuffRule
entryRuleAdditionalBuffRule
:
{ before(grammarAccess.getAdditionalBuffRuleRule()); }
	 ruleAdditionalBuffRule
{ after(grammarAccess.getAdditionalBuffRuleRule()); } 
	 EOF 
;

// Rule AdditionalBuffRule
ruleAdditionalBuffRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionalBuffRuleAccess().getGroup()); }
		(rule__AdditionalBuffRule__Group__0)
		{ after(grammarAccess.getAdditionalBuffRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntities
entryRuleEntities
:
{ before(grammarAccess.getEntitiesRule()); }
	 ruleEntities
{ after(grammarAccess.getEntitiesRule()); } 
	 EOF 
;

// Rule Entities
ruleEntities 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntitiesAccess().getGroup()); }
		(rule__Entities__Group__0)
		{ after(grammarAccess.getEntitiesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeath
entryRuleDeath
:
{ before(grammarAccess.getDeathRule()); }
	 ruleDeath
{ after(grammarAccess.getDeathRule()); } 
	 EOF 
;

// Rule Death
ruleDeath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeathAccess().getGroup()); }
		(rule__Death__Group__0)
		{ after(grammarAccess.getDeathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getGroup()); }
		(rule__Entity__Group__0)
		{ after(grammarAccess.getEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntityMoves
entryRuleEntityMoves
:
{ before(grammarAccess.getEntityMovesRule()); }
	 ruleEntityMoves
{ after(grammarAccess.getEntityMovesRule()); } 
	 EOF 
;

// Rule EntityMoves
ruleEntityMoves 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityMovesAccess().getGroup()); }
		(rule__EntityMoves__Group__0)
		{ after(grammarAccess.getEntityMovesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTeams
entryRuleTeams
:
{ before(grammarAccess.getTeamsRule()); }
	 ruleTeams
{ after(grammarAccess.getTeamsRule()); } 
	 EOF 
;

// Rule Teams
ruleTeams 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTeamsAccess().getGroup()); }
		(rule__Teams__Group__0)
		{ after(grammarAccess.getTeamsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTeam
entryRuleTeam
:
{ before(grammarAccess.getTeamRule()); }
	 ruleTeam
{ after(grammarAccess.getTeamRule()); } 
	 EOF 
;

// Rule Team
ruleTeam 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTeamAccess().getGroup()); }
		(rule__Team__Group__0)
		{ after(grammarAccess.getTeamAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMembers
entryRuleMembers
:
{ before(grammarAccess.getMembersRule()); }
	 ruleMembers
{ after(grammarAccess.getMembersRule()); } 
	 EOF 
;

// Rule Members
ruleMembers 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMembersAccess().getGroup()); }
		(rule__Members__Group__0)
		{ after(grammarAccess.getMembersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequire
entryRuleRequire
:
{ before(grammarAccess.getRequireRule()); }
	 ruleRequire
{ after(grammarAccess.getRequireRule()); } 
	 EOF 
;

// Rule Require
ruleRequire 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequireAccess().getGroup()); }
		(rule__Require__Group__0)
		{ after(grammarAccess.getRequireAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleORcondition
entryRuleORcondition
:
{ before(grammarAccess.getORconditionRule()); }
	 ruleORcondition
{ after(grammarAccess.getORconditionRule()); } 
	 EOF 
;

// Rule ORcondition
ruleORcondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getORconditionAccess().getGroup()); }
		(rule__ORcondition__Group__0)
		{ after(grammarAccess.getORconditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleANDcondition
entryRuleANDcondition
:
{ before(grammarAccess.getANDconditionRule()); }
	 ruleANDcondition
{ after(grammarAccess.getANDconditionRule()); } 
	 EOF 
;

// Rule ANDcondition
ruleANDcondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getANDconditionAccess().getGroup()); }
		(rule__ANDcondition__Group__0)
		{ after(grammarAccess.getANDconditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberComparing
entryRuleNumberComparing
:
{ before(grammarAccess.getNumberComparingRule()); }
	 ruleNumberComparing
{ after(grammarAccess.getNumberComparingRule()); } 
	 EOF 
;

// Rule NumberComparing
ruleNumberComparing 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberComparingAccess().getGroup()); }
		(rule__NumberComparing__Group__0)
		{ after(grammarAccess.getNumberComparingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparator
entryRuleComparator
:
{ before(grammarAccess.getComparatorRule()); }
	 ruleComparator
{ after(grammarAccess.getComparatorRule()); } 
	 EOF 
;

// Rule Comparator
ruleComparator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparatorAccess().getAlternatives()); }
		(rule__Comparator__Alternatives)
		{ after(grammarAccess.getComparatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSum
entryRuleSum
:
{ before(grammarAccess.getSumRule()); }
	 ruleSum
{ after(grammarAccess.getSumRule()); } 
	 EOF 
;

// Rule Sum
ruleSum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSumAccess().getGroup()); }
		(rule__Sum__Group__0)
		{ after(grammarAccess.getSumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiply
entryRuleMultiply
:
{ before(grammarAccess.getMultiplyRule()); }
	 ruleMultiply
{ after(grammarAccess.getMultiplyRule()); } 
	 EOF 
;

// Rule Multiply
ruleMultiply 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplyAccess().getGroup()); }
		(rule__Multiply__Group__0)
		{ after(grammarAccess.getMultiplyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomicNumber
entryRuleAtomicNumber
:
{ before(grammarAccess.getAtomicNumberRule()); }
	 ruleAtomicNumber
{ after(grammarAccess.getAtomicNumberRule()); } 
	 EOF 
;

// Rule AtomicNumber
ruleAtomicNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicNumberAccess().getAlternatives()); }
		(rule__AtomicNumber__Alternatives)
		{ after(grammarAccess.getAtomicNumberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActualNumbers
entryRuleActualNumbers
:
{ before(grammarAccess.getActualNumbersRule()); }
	 ruleActualNumbers
{ after(grammarAccess.getActualNumbersRule()); } 
	 EOF 
;

// Rule ActualNumbers
ruleActualNumbers 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActualNumbersAccess().getAlternatives()); }
		(rule__ActualNumbers__Alternatives)
		{ after(grammarAccess.getActualNumbersAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNameAttribute
entryRuleNameAttribute
:
{ before(grammarAccess.getNameAttributeRule()); }
	 ruleNameAttribute
{ after(grammarAccess.getNameAttributeRule()); } 
	 EOF 
;

// Rule NameAttribute
ruleNameAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameAttributeAccess().getAttributeAssignment()); }
		(rule__NameAttribute__AttributeAssignment)
		{ after(grammarAccess.getNameAttributeAccess().getAttributeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntNum
entryRuleIntNum
:
{ before(grammarAccess.getIntNumRule()); }
	 ruleIntNum
{ after(grammarAccess.getIntNumRule()); } 
	 EOF 
;

// Rule IntNum
ruleIntNum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntNumAccess().getValueAssignment()); }
		(rule__IntNum__ValueAssignment)
		{ after(grammarAccess.getIntNumAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloatNum
entryRuleFloatNum
:
{ before(grammarAccess.getFloatNumRule()); }
	 ruleFloatNum
{ after(grammarAccess.getFloatNumRule()); } 
	 EOF 
;

// Rule FloatNum
ruleFloatNum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatNumAccess().getGroup()); }
		(rule__FloatNum__Group__0)
		{ after(grammarAccess.getFloatNumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLegalType
entryRuleLegalType
:
{ before(grammarAccess.getLegalTypeRule()); }
	 ruleLegalType
{ after(grammarAccess.getLegalTypeRule()); } 
	 EOF 
;

// Rule LegalType
ruleLegalType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLegalTypeAccess().getAlternatives()); }
		(rule__LegalType__Alternatives)
		{ after(grammarAccess.getLegalTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getLocationsParserRuleCall_0()); }
		ruleLocations
		{ after(grammarAccess.getDeclarationAccess().getLocationsParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getRelationsParserRuleCall_1()); }
		ruleRelations
		{ after(grammarAccess.getDeclarationAccess().getRelationsParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getMovesParserRuleCall_2()); }
		ruleMoves
		{ after(grammarAccess.getDeclarationAccess().getMovesParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getEntitiesParserRuleCall_3()); }
		ruleEntities
		{ after(grammarAccess.getDeclarationAccess().getEntitiesParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getTeamsParserRuleCall_4()); }
		ruleTeams
		{ after(grammarAccess.getDeclarationAccess().getTeamsParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getDeathParserRuleCall_5()); }
		ruleDeath
		{ after(grammarAccess.getDeclarationAccess().getDeathParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getAttributesParserRuleCall_6()); }
		ruleAttributes
		{ after(grammarAccess.getDeclarationAccess().getAttributesParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getEffectsParserRuleCall_7()); }
		ruleEffects
		{ after(grammarAccess.getDeclarationAccess().getEffectsParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Effect__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectAccess().getBuffParserRuleCall_1_0()); }
		ruleBuff
		{ after(grammarAccess.getEffectAccess().getBuffParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getEffectAccess().getMoveEParserRuleCall_1_1()); }
		ruleMoveE
		{ after(grammarAccess.getEffectAccess().getMoveEParserRuleCall_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getEffectAccess().getAfterEParserRuleCall_1_2()); }
		ruleAfterE
		{ after(grammarAccess.getEffectAccess().getAfterEParserRuleCall_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getMEffectAssignment_4_0()); }
		(rule__Move__MEffectAssignment_4_0)
		{ after(grammarAccess.getMoveAccess().getMEffectAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getBEffectAssignment_4_1()); }
		(rule__Move__BEffectAssignment_4_1)
		{ after(grammarAccess.getMoveAccess().getBEffectAssignment_4_1()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getAEffectAssignment_4_2()); }
		(rule__Move__AEffectAssignment_4_2)
		{ after(grammarAccess.getMoveAccess().getAEffectAssignment_4_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValues__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeValuesAccess().getLTypesAssignment_1_0()); }
		(rule__AttributeValues__LTypesAssignment_1_0)
		{ after(grammarAccess.getAttributeValuesAccess().getLTypesAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeValuesAccess().getAnAssignment_1_1()); }
		(rule__AttributeValues__AnAssignment_1_1)
		{ after(grammarAccess.getAttributeValuesAccess().getAnAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalRule__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionalRuleAccess().getHitsAssignment_4_0()); }
		(rule__AdditionalRule__HitsAssignment_4_0)
		{ after(grammarAccess.getAdditionalRuleAccess().getHitsAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditionalRuleAccess().getHitsAssignment_4_1()); }
		(rule__AdditionalRule__HitsAssignment_4_1)
		{ after(grammarAccess.getAdditionalRuleAccess().getHitsAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getNumberComparingParserRuleCall_0()); }
		ruleNumberComparing
		{ after(grammarAccess.getStatementAccess().getNumberComparingParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_1()); }
		(rule__Statement__Group_1__0)
		{ after(grammarAccess.getStatementAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparatorAccess().getGroup_0()); }
		(rule__Comparator__Group_0__0)
		{ after(grammarAccess.getComparatorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparatorAccess().getGroup_1()); }
		(rule__Comparator__Group_1__0)
		{ after(grammarAccess.getComparatorAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparatorAccess().getGroup_2()); }
		(rule__Comparator__Group_2__0)
		{ after(grammarAccess.getComparatorAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparatorAccess().getGroup_3()); }
		(rule__Comparator__Group_3__0)
		{ after(grammarAccess.getComparatorAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparatorAccess().getGroup_4()); }
		(rule__Comparator__Group_4__0)
		{ after(grammarAccess.getComparatorAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getComparatorAccess().getGroup_5()); }
		(rule__Comparator__Group_5__0)
		{ after(grammarAccess.getComparatorAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumAccess().getGroup_1_0_0()); }
		(rule__Sum__Group_1_0_0__0)
		{ after(grammarAccess.getSumAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSumAccess().getGroup_1_0_1()); }
		(rule__Sum__Group_1_0_1__0)
		{ after(grammarAccess.getSumAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiply__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplyAccess().getGroup_1_0_0()); }
		(rule__Multiply__Group_1_0_0__0)
		{ after(grammarAccess.getMultiplyAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplyAccess().getGroup_1_0_1()); }
		(rule__Multiply__Group_1_0_1__0)
		{ after(grammarAccess.getMultiplyAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicNumber__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicNumberAccess().getActualNumbersParserRuleCall_0()); }
		ruleActualNumbers
		{ after(grammarAccess.getAtomicNumberAccess().getActualNumbersParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicNumberAccess().getNameAttributeParserRuleCall_1()); }
		ruleNameAttribute
		{ after(grammarAccess.getAtomicNumberAccess().getNameAttributeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualNumbers__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActualNumbersAccess().getFloatNumParserRuleCall_0()); }
		ruleFloatNum
		{ after(grammarAccess.getActualNumbersAccess().getFloatNumParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getActualNumbersAccess().getIntNumParserRuleCall_1()); }
		ruleIntNum
		{ after(grammarAccess.getActualNumbersAccess().getIntNumParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LegalType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLegalTypeAccess().getFloatKeyword_0()); }
		'Float'
		{ after(grammarAccess.getLegalTypeAccess().getFloatKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getLegalTypeAccess().getIntegerKeyword_1()); }
		'Integer'
		{ after(grammarAccess.getLegalTypeAccess().getIntegerKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemRPG__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemRPG__Group__0__Impl
	rule__SystemRPG__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemRPG__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemRPGAccess().getGameKeyword_0()); }
	'game'
	{ after(grammarAccess.getSystemRPGAccess().getGameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemRPG__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemRPG__Group__1__Impl
	rule__SystemRPG__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemRPG__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemRPGAccess().getNameAssignment_1()); }
	(rule__SystemRPG__NameAssignment_1)
	{ after(grammarAccess.getSystemRPGAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemRPG__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemRPG__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemRPG__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemRPGAccess().getDeclarationsAssignment_2()); }
	(rule__SystemRPG__DeclarationsAssignment_2)*
	{ after(grammarAccess.getSystemRPGAccess().getDeclarationsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Effects__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Effects__Group__0__Impl
	rule__Effects__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Effects__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectsAccess().getEffectsKeyword_0()); }
	'effects'
	{ after(grammarAccess.getEffectsAccess().getEffectsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Effects__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Effects__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Effects__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getEffectsAccess().getEffectAssignment_1()); }
		(rule__Effects__EffectAssignment_1)
		{ after(grammarAccess.getEffectsAccess().getEffectAssignment_1()); }
	)
	(
		{ before(grammarAccess.getEffectsAccess().getEffectAssignment_1()); }
		(rule__Effects__EffectAssignment_1)*
		{ after(grammarAccess.getEffectsAccess().getEffectAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Effect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Effect__Group__0__Impl
	rule__Effect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Effect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectAccess().getEffectKeyword_0()); }
	'effect'
	{ after(grammarAccess.getEffectAccess().getEffectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Effect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Effect__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Effect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffectAccess().getAlternatives_1()); }
	(rule__Effect__Alternatives_1)
	{ after(grammarAccess.getEffectAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Buff__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buff__Group__0__Impl
	rule__Buff__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Buff__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuffAccess().getBuffKeyword_0()); }
	'buff'
	{ after(grammarAccess.getBuffAccess().getBuffKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buff__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buff__Group__1__Impl
	rule__Buff__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Buff__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuffAccess().getNameAssignment_1()); }
	(rule__Buff__NameAssignment_1)
	{ after(grammarAccess.getBuffAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buff__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buff__Group__2__Impl
	rule__Buff__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Buff__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuffAccess().getRuleAssignment_2()); }
	(rule__Buff__RuleAssignment_2)
	{ after(grammarAccess.getBuffAccess().getRuleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buff__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buff__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Buff__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuffAccess().getGroup_3()); }
	(rule__Buff__Group_3__0)*
	{ after(grammarAccess.getBuffAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Buff__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buff__Group_3__0__Impl
	rule__Buff__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Buff__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuffAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getBuffAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buff__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Buff__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Buff__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuffAccess().getExtraRuleAssignment_3_1()); }
	(rule__Buff__ExtraRuleAssignment_3_1)
	{ after(grammarAccess.getBuffAccess().getExtraRuleAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MoveE__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveE__Group__0__Impl
	rule__MoveE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveE__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveEAccess().getMoveKeyword_0()); }
	'move'
	{ after(grammarAccess.getMoveEAccess().getMoveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveE__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveE__Group__1__Impl
	rule__MoveE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveE__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveEAccess().getNameAssignment_1()); }
	(rule__MoveE__NameAssignment_1)
	{ after(grammarAccess.getMoveEAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveE__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveE__Group__2__Impl
	rule__MoveE__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveE__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveEAccess().getRuleAssignment_2()); }
	(rule__MoveE__RuleAssignment_2)
	{ after(grammarAccess.getMoveEAccess().getRuleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveE__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveE__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveE__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveEAccess().getGroup_3()); }
	(rule__MoveE__Group_3__0)*
	{ after(grammarAccess.getMoveEAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MoveE__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveE__Group_3__0__Impl
	rule__MoveE__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveE__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveEAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getMoveEAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveE__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveE__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveE__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveEAccess().getExtraRuleAssignment_3_1()); }
	(rule__MoveE__ExtraRuleAssignment_3_1)
	{ after(grammarAccess.getMoveEAccess().getExtraRuleAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AfterE__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AfterE__Group__0__Impl
	rule__AfterE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterE__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfterEAccess().getAfterKeyword_0()); }
	'after'
	{ after(grammarAccess.getAfterEAccess().getAfterKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterE__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AfterE__Group__1__Impl
	rule__AfterE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterE__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfterEAccess().getNameAssignment_1()); }
	(rule__AfterE__NameAssignment_1)
	{ after(grammarAccess.getAfterEAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterE__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AfterE__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterE__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfterEAccess().getRuleAssignment_2()); }
	(rule__AfterE__RuleAssignment_2)
	{ after(grammarAccess.getAfterEAccess().getRuleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attributes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attributes__Group__0__Impl
	rule__Attributes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributesAccess().getAttributesKeyword_0()); }
	'attributes'
	{ after(grammarAccess.getAttributesAccess().getAttributesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attributes__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAttributesAccess().getAttributeAssignment_1()); }
		(rule__Attributes__AttributeAssignment_1)
		{ after(grammarAccess.getAttributesAccess().getAttributeAssignment_1()); }
	)
	(
		{ before(grammarAccess.getAttributesAccess().getAttributeAssignment_1()); }
		(rule__Attributes__AttributeAssignment_1)*
		{ after(grammarAccess.getAttributesAccess().getAttributeAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getModifiedAssignment_0()); }
	(rule__Attribute__ModifiedAssignment_0)?
	{ after(grammarAccess.getAttributeAccess().getModifiedAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAttributeKeyword_1()); }
	'attribute'
	{ after(grammarAccess.getAttributeAccess().getAttributeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_2()); }
	(rule__Attribute__NameAssignment_2)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAValAssignment_3()); }
	(rule__Attribute__AValAssignment_3)
	{ after(grammarAccess.getAttributeAccess().getAValAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Locations__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Locations__Group__0__Impl
	rule__Locations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Locations__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocationsAccess().getLocationKeyword_0()); }
	'location'
	{ after(grammarAccess.getLocationsAccess().getLocationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Locations__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Locations__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Locations__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getLocationsAccess().getLocAssignment_1()); }
		(rule__Locations__LocAssignment_1)
		{ after(grammarAccess.getLocationsAccess().getLocAssignment_1()); }
	)
	(
		{ before(grammarAccess.getLocationsAccess().getLocAssignment_1()); }
		(rule__Locations__LocAssignment_1)*
		{ after(grammarAccess.getLocationsAccess().getLocAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Loc__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loc__Group__0__Impl
	rule__Loc__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Loc__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocAccess().getNameAssignment_0()); }
	(rule__Loc__NameAssignment_0)
	{ after(grammarAccess.getLocAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loc__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loc__Group__1__Impl
	rule__Loc__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Loc__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocAccess().getGroup_1()); }
	(rule__Loc__Group_1__0)?
	{ after(grammarAccess.getLocAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loc__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loc__Group__2__Impl
	rule__Loc__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Loc__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocAccess().getOpponentsKeyword_2()); }
	'opponents'
	{ after(grammarAccess.getLocAccess().getOpponentsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loc__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loc__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Loc__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocAccess().getTeamAssignment_3()); }
	(rule__Loc__TeamAssignment_3)
	{ after(grammarAccess.getLocAccess().getTeamAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Loc__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loc__Group_1__0__Impl
	rule__Loc__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Loc__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocAccess().getTypeKeyword_1_0()); }
	'type'
	{ after(grammarAccess.getLocAccess().getTypeKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loc__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loc__Group_1__1__Impl
	rule__Loc__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Loc__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocAccess().getTipeAssignment_1_1()); }
	(rule__Loc__TipeAssignment_1_1)
	{ after(grammarAccess.getLocAccess().getTipeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loc__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loc__Group_1__2__Impl
	rule__Loc__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Loc__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocAccess().getEffectivenessKeyword_1_2()); }
	'effectiveness'
	{ after(grammarAccess.getLocAccess().getEffectivenessKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loc__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loc__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Loc__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocAccess().getEffAssignment_1_3()); }
	(rule__Loc__EffAssignment_1_3)
	{ after(grammarAccess.getLocAccess().getEffAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relations__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relations__Group__0__Impl
	rule__Relations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relations__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationsAccess().getRelationsKeyword_0()); }
	'relations'
	{ after(grammarAccess.getRelationsAccess().getRelationsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relations__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relations__Group__1__Impl
	rule__Relations__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relations__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationsAccess().getRelationModifiersParserRuleCall_1()); }
	(ruleRelationModifiers)?
	{ after(grammarAccess.getRelationsAccess().getRelationModifiersParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relations__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relations__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relations__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRelationsAccess().getTypeAssignment_2()); }
		(rule__Relations__TypeAssignment_2)
		{ after(grammarAccess.getRelationsAccess().getTypeAssignment_2()); }
	)
	(
		{ before(grammarAccess.getRelationsAccess().getTypeAssignment_2()); }
		(rule__Relations__TypeAssignment_2)*
		{ after(grammarAccess.getRelationsAccess().getTypeAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationModifiers__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationModifiers__Group__0__Impl
	rule__RelationModifiers__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationModifiers__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationModifiersAccess().getModifiersKeyword_0()); }
	'modifiers'
	{ after(grammarAccess.getRelationModifiersAccess().getModifiersKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationModifiers__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationModifiers__Group__1__Impl
	rule__RelationModifiers__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationModifiers__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationModifiersAccess().getSynergyKeyword_1()); }
	'synergy'
	{ after(grammarAccess.getRelationModifiersAccess().getSynergyKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationModifiers__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationModifiers__Group__2__Impl
	rule__RelationModifiers__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationModifiers__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationModifiersAccess().getSynAssignment_2()); }
	(rule__RelationModifiers__SynAssignment_2)
	{ after(grammarAccess.getRelationModifiersAccess().getSynAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationModifiers__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationModifiers__Group__3__Impl
	rule__RelationModifiers__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationModifiers__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationModifiersAccess().getEffectiveKeyword_3()); }
	'effective'
	{ after(grammarAccess.getRelationModifiersAccess().getEffectiveKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationModifiers__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationModifiers__Group__4__Impl
	rule__RelationModifiers__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationModifiers__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationModifiersAccess().getEffAssignment_4()); }
	(rule__RelationModifiers__EffAssignment_4)
	{ after(grammarAccess.getRelationModifiersAccess().getEffAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationModifiers__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationModifiers__Group__5__Impl
	rule__RelationModifiers__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationModifiers__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationModifiersAccess().getIneffectiveKeyword_5()); }
	'ineffective'
	{ after(grammarAccess.getRelationModifiersAccess().getIneffectiveKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationModifiers__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationModifiers__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationModifiers__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationModifiersAccess().getIneffAssignment_6()); }
	(rule__RelationModifiers__IneffAssignment_6)
	{ after(grammarAccess.getRelationModifiersAccess().getIneffAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeKeyword_0()); }
	'type'
	{ after(grammarAccess.getTypeAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__1__Impl
	rule__Type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getNameAssignment_1()); }
	(rule__Type__NameAssignment_1)
	{ after(grammarAccess.getTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTExpressionAssignment_2()); }
	(rule__Type__TExpressionAssignment_2)?
	{ after(grammarAccess.getTypeAccess().getTExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeExpression__Group__0__Impl
	rule__TypeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeExpressionAccess().getStrongAssignment_0()); }
	(rule__TypeExpression__StrongAssignment_0)
	{ after(grammarAccess.getTypeExpressionAccess().getStrongAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeExpression__Group__1__Impl
	rule__TypeExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeExpressionAccess().getGroup_1()); }
	(rule__TypeExpression__Group_1__0)*
	{ after(grammarAccess.getTypeExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeExpression__Group__2__Impl
	rule__TypeExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeExpressionAccess().getLessThanSignKeyword_2()); }
	'<'
	{ after(grammarAccess.getTypeExpressionAccess().getLessThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeExpression__Group__3__Impl
	rule__TypeExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeExpressionAccess().getCurrentTAssignment_3()); }
	(rule__TypeExpression__CurrentTAssignment_3)
	{ after(grammarAccess.getTypeExpressionAccess().getCurrentTAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeExpression__Group__4__Impl
	rule__TypeExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeExpressionAccess().getLessThanSignKeyword_4()); }
	'<'
	{ after(grammarAccess.getTypeExpressionAccess().getLessThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeExpression__Group__5__Impl
	rule__TypeExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeExpressionAccess().getWeakAssignment_5()); }
	(rule__TypeExpression__WeakAssignment_5)
	{ after(grammarAccess.getTypeExpressionAccess().getWeakAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeExpressionAccess().getGroup_6()); }
	(rule__TypeExpression__Group_6__0)*
	{ after(grammarAccess.getTypeExpressionAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeExpression__Group_1__0__Impl
	rule__TypeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeExpressionAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getTypeExpressionAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeExpressionAccess().getStrong2Assignment_1_1()); }
	(rule__TypeExpression__Strong2Assignment_1_1)
	{ after(grammarAccess.getTypeExpressionAccess().getStrong2Assignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeExpression__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeExpression__Group_6__0__Impl
	rule__TypeExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeExpressionAccess().getCommaKeyword_6_0()); }
	','
	{ after(grammarAccess.getTypeExpressionAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeExpression__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeExpressionAccess().getWeak2Assignment_6_1()); }
	(rule__TypeExpression__Weak2Assignment_6_1)
	{ after(grammarAccess.getTypeExpressionAccess().getWeak2Assignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Moves__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Moves__Group__0__Impl
	rule__Moves__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Moves__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMovesAccess().getMovesKeyword_0()); }
	'moves'
	{ after(grammarAccess.getMovesAccess().getMovesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Moves__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Moves__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Moves__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMovesAccess().getMoveAssignment_1()); }
		(rule__Moves__MoveAssignment_1)
		{ after(grammarAccess.getMovesAccess().getMoveAssignment_1()); }
	)
	(
		{ before(grammarAccess.getMovesAccess().getMoveAssignment_1()); }
		(rule__Moves__MoveAssignment_1)*
		{ after(grammarAccess.getMovesAccess().getMoveAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Move__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__0__Impl
	rule__Move__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getMoveKeyword_0()); }
	'move'
	{ after(grammarAccess.getMoveAccess().getMoveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__1__Impl
	rule__Move__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getNameAssignment_1()); }
	(rule__Move__NameAssignment_1)
	{ after(grammarAccess.getMoveAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__2__Impl
	rule__Move__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getETypeAssignment_2()); }
	(rule__Move__ETypeAssignment_2)
	{ after(grammarAccess.getMoveAccess().getETypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__3__Impl
	rule__Move__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getAttAssignment_3()); }
	(rule__Move__AttAssignment_3)*
	{ after(grammarAccess.getMoveAccess().getAttAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getAlternatives_4()); }
	(rule__Move__Alternatives_4)*
	{ after(grammarAccess.getMoveAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MEffect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MEffect__Group__0__Impl
	rule__MEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MEffect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMEffectAccess().getEffectKeyword_0()); }
	'effect'
	{ after(grammarAccess.getMEffectAccess().getEffectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MEffect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MEffect__Group__1__Impl
	rule__MEffect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MEffect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMEffectAccess().getMoveKeyword_1()); }
	'move'
	{ after(grammarAccess.getMEffectAccess().getMoveKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MEffect__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MEffect__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MEffect__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMEffectAccess().getMoveENameAssignment_2()); }
	(rule__MEffect__MoveENameAssignment_2)
	{ after(grammarAccess.getMEffectAccess().getMoveENameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BEffect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BEffect__Group__0__Impl
	rule__BEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BEffect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBEffectAccess().getEffectKeyword_0()); }
	'effect'
	{ after(grammarAccess.getBEffectAccess().getEffectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BEffect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BEffect__Group__1__Impl
	rule__BEffect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BEffect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBEffectAccess().getBuffKeyword_1()); }
	'buff'
	{ after(grammarAccess.getBEffectAccess().getBuffKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BEffect__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BEffect__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BEffect__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBEffectAccess().getBuffENameAssignment_2()); }
	(rule__BEffect__BuffENameAssignment_2)
	{ after(grammarAccess.getBEffectAccess().getBuffENameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AEffect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AEffect__Group__0__Impl
	rule__AEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AEffect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAEffectAccess().getEffectKeyword_0()); }
	'effect'
	{ after(grammarAccess.getAEffectAccess().getEffectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AEffect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AEffect__Group__1__Impl
	rule__AEffect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AEffect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAEffectAccess().getAfterKeyword_1()); }
	'after'
	{ after(grammarAccess.getAEffectAccess().getAfterKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AEffect__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AEffect__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AEffect__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAEffectAccess().getAfterENameAssignment_2()); }
	(rule__AEffect__AfterENameAssignment_2)
	{ after(grammarAccess.getAEffectAccess().getAfterENameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EType__Group__0__Impl
	rule__EType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getETypeAccess().getTypeKeyword_0()); }
	'type'
	{ after(grammarAccess.getETypeAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getETypeAccess().getTypeAssignment_1()); }
	(rule__EType__TypeAssignment_1)
	{ after(grammarAccess.getETypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeValues__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeValues__Group__0__Impl
	rule__AttributeValues__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValues__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeValuesAccess().getIsKeyword_0()); }
	'is'
	{ after(grammarAccess.getAttributeValuesAccess().getIsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValues__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeValues__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValues__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeValuesAccess().getAlternatives_1()); }
	(rule__AttributeValues__Alternatives_1)
	{ after(grammarAccess.getAttributeValuesAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AltAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AltAttribute__Group__0__Impl
	rule__AltAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AltAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAltAttributeAccess().getAttributeKeyword_0()); }
	'attribute'
	{ after(grammarAccess.getAltAttributeAccess().getAttributeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AltAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AltAttribute__Group__1__Impl
	rule__AltAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AltAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAltAttributeAccess().getAttributeAssignment_1()); }
	(rule__AltAttribute__AttributeAssignment_1)
	{ after(grammarAccess.getAltAttributeAccess().getAttributeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AltAttribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AltAttribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AltAttribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAltAttributeAccess().getAvAssignment_2()); }
	(rule__AltAttribute__AvAssignment_2)?
	{ after(grammarAccess.getAltAttributeAccess().getAvAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getGroup_0()); }
	(rule__Rule__Group_0__0)?
	{ after(grammarAccess.getRuleAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getTargetAssignment_1()); }
	(rule__Rule__TargetAssignment_1)
	{ after(grammarAccess.getRuleAccess().getTargetAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getIsKeyword_2()); }
	'is'
	{ after(grammarAccess.getRuleAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getSumAssignment_3()); }
	(rule__Rule__SumAssignment_3)
	{ after(grammarAccess.getRuleAccess().getSumAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_0__0__Impl
	rule__Rule__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getIfKeyword_0_0()); }
	'if'
	{ after(grammarAccess.getRuleAccess().getIfKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_0__1__Impl
	rule__Rule__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getOrAssignment_0_1()); }
	(rule__Rule__OrAssignment_0_1)
	{ after(grammarAccess.getRuleAccess().getOrAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getThenKeyword_0_2()); }
	'then'
	{ after(grammarAccess.getRuleAccess().getThenKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionalRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionalRule__Group__0__Impl
	rule__AdditionalRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionalRuleAccess().getTargetAssignment_0()); }
	(rule__AdditionalRule__TargetAssignment_0)
	{ after(grammarAccess.getAdditionalRuleAccess().getTargetAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionalRule__Group__1__Impl
	rule__AdditionalRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionalRuleAccess().getIsKeyword_1()); }
	'is'
	{ after(grammarAccess.getAdditionalRuleAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionalRule__Group__2__Impl
	rule__AdditionalRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionalRuleAccess().getSumAssignment_2()); }
	(rule__AdditionalRule__SumAssignment_2)
	{ after(grammarAccess.getAdditionalRuleAccess().getSumAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionalRule__Group__3__Impl
	rule__AdditionalRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionalRuleAccess().getHitsKeyword_3()); }
	'hits'
	{ after(grammarAccess.getAdditionalRuleAccess().getHitsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionalRule__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionalRuleAccess().getAlternatives_4()); }
	(rule__AdditionalRule__Alternatives_4)
	{ after(grammarAccess.getAdditionalRuleAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionalBuffRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionalBuffRule__Group__0__Impl
	rule__AdditionalBuffRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalBuffRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionalBuffRuleAccess().getTargetAssignment_0()); }
	(rule__AdditionalBuffRule__TargetAssignment_0)
	{ after(grammarAccess.getAdditionalBuffRuleAccess().getTargetAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalBuffRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionalBuffRule__Group__1__Impl
	rule__AdditionalBuffRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalBuffRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionalBuffRuleAccess().getIsKeyword_1()); }
	'is'
	{ after(grammarAccess.getAdditionalBuffRuleAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalBuffRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionalBuffRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalBuffRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionalBuffRuleAccess().getSumAssignment_2()); }
	(rule__AdditionalBuffRule__SumAssignment_2)
	{ after(grammarAccess.getAdditionalBuffRuleAccess().getSumAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entities__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entities__Group__0__Impl
	rule__Entities__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entities__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntitiesAccess().getEntitiesKeyword_0()); }
	'entities'
	{ after(grammarAccess.getEntitiesAccess().getEntitiesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entities__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entities__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entities__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getEntitiesAccess().getEntityAssignment_1()); }
		(rule__Entities__EntityAssignment_1)
		{ after(grammarAccess.getEntitiesAccess().getEntityAssignment_1()); }
	)
	(
		{ before(grammarAccess.getEntitiesAccess().getEntityAssignment_1()); }
		(rule__Entities__EntityAssignment_1)*
		{ after(grammarAccess.getEntitiesAccess().getEntityAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Death__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Death__Group__0__Impl
	rule__Death__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Death__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeathAccess().getDeathKeyword_0()); }
	'death'
	{ after(grammarAccess.getDeathAccess().getDeathKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Death__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Death__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Death__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeathAccess().getReqAssignment_1()); }
	(rule__Death__ReqAssignment_1)
	{ after(grammarAccess.getDeathAccess().getReqAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
	'entity'
	{ after(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
	(rule__Entity__NameAssignment_1)
	{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_2()); }
	(rule__Entity__Group_2__0)?
	{ after(grammarAccess.getEntityAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getETypeAssignment_3()); }
	(rule__Entity__ETypeAssignment_3)
	{ after(grammarAccess.getEntityAccess().getETypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getAttAssignment_4()); }
	(rule__Entity__AttAssignment_4)*
	{ after(grammarAccess.getEntityAccess().getAttAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEMovesAssignment_5()); }
	(rule__Entity__EMovesAssignment_5)
	{ after(grammarAccess.getEntityAccess().getEMovesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__0__Impl
	rule__Entity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getExtendsKeyword_2_0()); }
	'extends'
	{ after(grammarAccess.getEntityAccess().getExtendsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getExtendAssignment_2_1()); }
	(rule__Entity__ExtendAssignment_2_1)
	{ after(grammarAccess.getEntityAccess().getExtendAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntityMoves__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityMoves__Group__0__Impl
	rule__EntityMoves__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityMoves__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityMovesAccess().getMoveKeyword_0()); }
	'move'
	{ after(grammarAccess.getEntityMovesAccess().getMoveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityMoves__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityMoves__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityMoves__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getEntityMovesAccess().getMoveAssignment_1()); }
		(rule__EntityMoves__MoveAssignment_1)
		{ after(grammarAccess.getEntityMovesAccess().getMoveAssignment_1()); }
	)
	(
		{ before(grammarAccess.getEntityMovesAccess().getMoveAssignment_1()); }
		(rule__EntityMoves__MoveAssignment_1)*
		{ after(grammarAccess.getEntityMovesAccess().getMoveAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Teams__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Teams__Group__0__Impl
	rule__Teams__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Teams__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTeamsAccess().getTeamsKeyword_0()); }
	'teams'
	{ after(grammarAccess.getTeamsAccess().getTeamsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Teams__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Teams__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Teams__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTeamsAccess().getTeamAssignment_1()); }
		(rule__Teams__TeamAssignment_1)
		{ after(grammarAccess.getTeamsAccess().getTeamAssignment_1()); }
	)
	(
		{ before(grammarAccess.getTeamsAccess().getTeamAssignment_1()); }
		(rule__Teams__TeamAssignment_1)*
		{ after(grammarAccess.getTeamsAccess().getTeamAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Team__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Team__Group__0__Impl
	rule__Team__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Team__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTeamAccess().getTeamKeyword_0()); }
	'team'
	{ after(grammarAccess.getTeamAccess().getTeamKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Team__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Team__Group__1__Impl
	rule__Team__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Team__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTeamAccess().getNameAssignment_1()); }
	(rule__Team__NameAssignment_1)
	{ after(grammarAccess.getTeamAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Team__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Team__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Team__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTeamAccess().getMembersAssignment_2()); }
	(rule__Team__MembersAssignment_2)
	{ after(grammarAccess.getTeamAccess().getMembersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Members__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Members__Group__0__Impl
	rule__Members__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Members__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMembersAccess().getMembersKeyword_0()); }
	'members'
	{ after(grammarAccess.getMembersAccess().getMembersKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Members__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Members__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Members__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMembersAccess().getEntityAssignment_1()); }
		(rule__Members__EntityAssignment_1)
		{ after(grammarAccess.getMembersAccess().getEntityAssignment_1()); }
	)
	(
		{ before(grammarAccess.getMembersAccess().getEntityAssignment_1()); }
		(rule__Members__EntityAssignment_1)*
		{ after(grammarAccess.getMembersAccess().getEntityAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Require__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Require__Group__0__Impl
	rule__Require__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAccess().getRequireKeyword_0()); }
	'require'
	{ after(grammarAccess.getRequireAccess().getRequireKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Require__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAccess().getLogAssignment_1()); }
	(rule__Require__LogAssignment_1)
	{ after(grammarAccess.getRequireAccess().getLogAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ORcondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ORcondition__Group__0__Impl
	rule__ORcondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ORcondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getORconditionAccess().getANDconditionParserRuleCall_0()); }
	ruleANDcondition
	{ after(grammarAccess.getORconditionAccess().getANDconditionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ORcondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ORcondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ORcondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getORconditionAccess().getGroup_1()); }
	(rule__ORcondition__Group_1__0)*
	{ after(grammarAccess.getORconditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ORcondition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ORcondition__Group_1__0__Impl
	rule__ORcondition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ORcondition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getORconditionAccess().getORKeyword_1_0()); }
	'OR'
	{ after(grammarAccess.getORconditionAccess().getORKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ORcondition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ORcondition__Group_1__1__Impl
	rule__ORcondition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ORcondition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getORconditionAccess().getOrLeftAction_1_1()); }
	()
	{ after(grammarAccess.getORconditionAccess().getOrLeftAction_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ORcondition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ORcondition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ORcondition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getORconditionAccess().getRightAssignment_1_2()); }
	(rule__ORcondition__RightAssignment_1_2)
	{ after(grammarAccess.getORconditionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ANDcondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ANDcondition__Group__0__Impl
	rule__ANDcondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ANDcondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANDconditionAccess().getStatementParserRuleCall_0()); }
	ruleStatement
	{ after(grammarAccess.getANDconditionAccess().getStatementParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ANDcondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ANDcondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ANDcondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANDconditionAccess().getGroup_1()); }
	(rule__ANDcondition__Group_1__0)*
	{ after(grammarAccess.getANDconditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ANDcondition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ANDcondition__Group_1__0__Impl
	rule__ANDcondition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ANDcondition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANDconditionAccess().getANDKeyword_1_0()); }
	'AND'
	{ after(grammarAccess.getANDconditionAccess().getANDKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ANDcondition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ANDcondition__Group_1__1__Impl
	rule__ANDcondition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ANDcondition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANDconditionAccess().getAndLeftAction_1_1()); }
	()
	{ after(grammarAccess.getANDconditionAccess().getAndLeftAction_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ANDcondition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ANDcondition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ANDcondition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getANDconditionAccess().getRightAssignment_1_2()); }
	(rule__ANDcondition__RightAssignment_1_2)
	{ after(grammarAccess.getANDconditionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1__0__Impl
	rule__Statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1__1__Impl
	rule__Statement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getORconditionParserRuleCall_1_1()); }
	ruleORcondition
	{ after(grammarAccess.getStatementAccess().getORconditionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getStatementAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumberComparing__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberComparing__Group__0__Impl
	rule__NumberComparing__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberComparing__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberComparingAccess().getLeftAssignment_0()); }
	(rule__NumberComparing__LeftAssignment_0)
	{ after(grammarAccess.getNumberComparingAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberComparing__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberComparing__Group__1__Impl
	rule__NumberComparing__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberComparing__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberComparingAccess().getCompAssignment_1()); }
	(rule__NumberComparing__CompAssignment_1)
	{ after(grammarAccess.getNumberComparingAccess().getCompAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberComparing__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberComparing__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberComparing__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberComparingAccess().getRightAssignment_2()); }
	(rule__NumberComparing__RightAssignment_2)
	{ after(grammarAccess.getNumberComparingAccess().getRightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparator__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group_0__0__Impl
	rule__Comparator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getSmallerAction_0_0()); }
	()
	{ after(grammarAccess.getComparatorAccess().getSmallerAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getLessThanSignKeyword_0_1()); }
	'<'
	{ after(grammarAccess.getComparatorAccess().getLessThanSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group_1__0__Impl
	rule__Comparator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getSmallerEqAction_1_0()); }
	()
	{ after(grammarAccess.getComparatorAccess().getSmallerEqAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getLessThanSignEqualsSignKeyword_1_1()); }
	'<='
	{ after(grammarAccess.getComparatorAccess().getLessThanSignEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparator__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group_2__0__Impl
	rule__Comparator__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getEqAction_2_0()); }
	()
	{ after(grammarAccess.getComparatorAccess().getEqAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getEqualsSignEqualsSignKeyword_2_1()); }
	'=='
	{ after(grammarAccess.getComparatorAccess().getEqualsSignEqualsSignKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparator__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group_3__0__Impl
	rule__Comparator__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getBiggerEqAction_3_0()); }
	()
	{ after(grammarAccess.getComparatorAccess().getBiggerEqAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getGreaterThanSignEqualsSignKeyword_3_1()); }
	'>='
	{ after(grammarAccess.getComparatorAccess().getGreaterThanSignEqualsSignKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparator__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group_4__0__Impl
	rule__Comparator__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getBiggerAction_4_0()); }
	()
	{ after(grammarAccess.getComparatorAccess().getBiggerAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getGreaterThanSignKeyword_4_1()); }
	'>'
	{ after(grammarAccess.getComparatorAccess().getGreaterThanSignKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparator__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group_5__0__Impl
	rule__Comparator__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getNEqAction_5_0()); }
	()
	{ after(grammarAccess.getComparatorAccess().getNEqAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getExclamationMarkEqualsSignKeyword_5_1()); }
	'!='
	{ after(grammarAccess.getComparatorAccess().getExclamationMarkEqualsSignKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__0__Impl
	rule__Sum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getMultiplyParserRuleCall_0()); }
	ruleMultiply
	{ after(grammarAccess.getSumAccess().getMultiplyParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getGroup_1()); }
	(rule__Sum__Group_1__0)*
	{ after(grammarAccess.getSumAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_1__0__Impl
	rule__Sum__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getAlternatives_1_0()); }
	(rule__Sum__Alternatives_1_0)
	{ after(grammarAccess.getSumAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getRightAssignment_1_1()); }
	(rule__Sum__RightAssignment_1_1)
	{ after(grammarAccess.getSumAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_1_0_0__0__Impl
	rule__Sum__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getPlusSignKeyword_1_0_0_0()); }
	'+'
	{ after(grammarAccess.getSumAccess().getPlusSignKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getAddLeftAction_1_0_0_1()); }
	()
	{ after(grammarAccess.getSumAccess().getAddLeftAction_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_1_0_1__0__Impl
	rule__Sum__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getHyphenMinusKeyword_1_0_1_0()); }
	'-'
	{ after(grammarAccess.getSumAccess().getHyphenMinusKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getSubLeftAction_1_0_1_1()); }
	()
	{ after(grammarAccess.getSumAccess().getSubLeftAction_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiply__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiply__Group__0__Impl
	rule__Multiply__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiply__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplyAccess().getAtomicNumberParserRuleCall_0()); }
	ruleAtomicNumber
	{ after(grammarAccess.getMultiplyAccess().getAtomicNumberParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiply__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiply__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiply__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplyAccess().getGroup_1()); }
	(rule__Multiply__Group_1__0)*
	{ after(grammarAccess.getMultiplyAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiply__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiply__Group_1__0__Impl
	rule__Multiply__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiply__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplyAccess().getAlternatives_1_0()); }
	(rule__Multiply__Alternatives_1_0)
	{ after(grammarAccess.getMultiplyAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiply__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiply__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiply__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplyAccess().getRightAssignment_1_1()); }
	(rule__Multiply__RightAssignment_1_1)
	{ after(grammarAccess.getMultiplyAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiply__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiply__Group_1_0_0__0__Impl
	rule__Multiply__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiply__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplyAccess().getAsteriskKeyword_1_0_0_0()); }
	'*'
	{ after(grammarAccess.getMultiplyAccess().getAsteriskKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiply__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiply__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiply__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplyAccess().getMultLeftAction_1_0_0_1()); }
	()
	{ after(grammarAccess.getMultiplyAccess().getMultLeftAction_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiply__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiply__Group_1_0_1__0__Impl
	rule__Multiply__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiply__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplyAccess().getSolidusKeyword_1_0_1_0()); }
	'/'
	{ after(grammarAccess.getMultiplyAccess().getSolidusKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiply__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiply__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiply__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplyAccess().getDivLeftAction_1_0_1_1()); }
	()
	{ after(grammarAccess.getMultiplyAccess().getDivLeftAction_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FloatNum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatNum__Group__0__Impl
	rule__FloatNum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatNum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatNumAccess().getIAssignment_0()); }
	(rule__FloatNum__IAssignment_0)
	{ after(grammarAccess.getFloatNumAccess().getIAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatNum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatNum__Group__1__Impl
	rule__FloatNum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatNum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatNumAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getFloatNumAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatNum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatNum__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatNum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatNumAccess().getDecimalAssignment_2()); }
	(rule__FloatNum__DecimalAssignment_2)
	{ after(grammarAccess.getFloatNumAccess().getDecimalAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SystemRPG__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemRPGAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSystemRPGAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemRPG__DeclarationsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemRPGAccess().getDeclarationsDeclarationParserRuleCall_2_0()); }
		ruleDeclaration
		{ after(grammarAccess.getSystemRPGAccess().getDeclarationsDeclarationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Effects__EffectAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffectsAccess().getEffectEffectParserRuleCall_1_0()); }
		ruleEffect
		{ after(grammarAccess.getEffectsAccess().getEffectEffectParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buff__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuffAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBuffAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buff__RuleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuffAccess().getRuleRuleParserRuleCall_2_0()); }
		ruleRule
		{ after(grammarAccess.getBuffAccess().getRuleRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Buff__ExtraRuleAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuffAccess().getExtraRuleAdditionalBuffRuleParserRuleCall_3_1_0()); }
		ruleAdditionalBuffRule
		{ after(grammarAccess.getBuffAccess().getExtraRuleAdditionalBuffRuleParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveE__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveEAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMoveEAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveE__RuleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveEAccess().getRuleRuleParserRuleCall_2_0()); }
		ruleRule
		{ after(grammarAccess.getMoveEAccess().getRuleRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveE__ExtraRuleAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveEAccess().getExtraRuleAdditionalRuleParserRuleCall_3_1_0()); }
		ruleAdditionalRule
		{ after(grammarAccess.getMoveEAccess().getExtraRuleAdditionalRuleParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterE__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAfterEAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAfterEAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterE__RuleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAfterEAccess().getRuleRuleParserRuleCall_2_0()); }
		ruleRule
		{ after(grammarAccess.getAfterEAccess().getRuleRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__AttributeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributesAccess().getAttributeAttributeParserRuleCall_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getAttributesAccess().getAttributeAttributeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ModifiedAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getModifiedUnmodifiedKeyword_0_0()); }
		(
			{ before(grammarAccess.getAttributeAccess().getModifiedUnmodifiedKeyword_0_0()); }
			'unmodified'
			{ after(grammarAccess.getAttributeAccess().getModifiedUnmodifiedKeyword_0_0()); }
		)
		{ after(grammarAccess.getAttributeAccess().getModifiedUnmodifiedKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__AValAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getAValAttributeValuesParserRuleCall_3_0()); }
		ruleAttributeValues
		{ after(grammarAccess.getAttributeAccess().getAValAttributeValuesParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Locations__LocAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocationsAccess().getLocLocParserRuleCall_1_0()); }
		ruleLoc
		{ after(grammarAccess.getLocationsAccess().getLocLocParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loc__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getLocAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loc__TipeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocAccess().getTipeTypeCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getLocAccess().getTipeTypeIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLocAccess().getTipeTypeIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getLocAccess().getTipeTypeCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loc__EffAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocAccess().getEffActualNumbersParserRuleCall_1_3_0()); }
		ruleActualNumbers
		{ after(grammarAccess.getLocAccess().getEffActualNumbersParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loc__TeamAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocAccess().getTeamTeamCrossReference_3_0()); }
		(
			{ before(grammarAccess.getLocAccess().getTeamTeamIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLocAccess().getTeamTeamIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getLocAccess().getTeamTeamCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relations__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationsAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getRelationsAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationModifiers__SynAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationModifiersAccess().getSynActualNumbersParserRuleCall_2_0()); }
		ruleActualNumbers
		{ after(grammarAccess.getRelationModifiersAccess().getSynActualNumbersParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationModifiers__EffAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationModifiersAccess().getEffActualNumbersParserRuleCall_4_0()); }
		ruleActualNumbers
		{ after(grammarAccess.getRelationModifiersAccess().getEffActualNumbersParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationModifiers__IneffAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationModifiersAccess().getIneffActualNumbersParserRuleCall_6_0()); }
		ruleActualNumbers
		{ after(grammarAccess.getRelationModifiersAccess().getIneffActualNumbersParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTExpressionTypeExpressionParserRuleCall_2_0()); }
		ruleTypeExpression
		{ after(grammarAccess.getTypeAccess().getTExpressionTypeExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__StrongAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeExpressionAccess().getStrongTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getTypeExpressionAccess().getStrongTypeIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTypeExpressionAccess().getStrongTypeIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getTypeExpressionAccess().getStrongTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Strong2Assignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeExpressionAccess().getStrong2TypeCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getTypeExpressionAccess().getStrong2TypeIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTypeExpressionAccess().getStrong2TypeIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getTypeExpressionAccess().getStrong2TypeCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__CurrentTAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeExpressionAccess().getCurrentTTypeCrossReference_3_0()); }
		(
			{ before(grammarAccess.getTypeExpressionAccess().getCurrentTTypeIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTypeExpressionAccess().getCurrentTTypeIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getTypeExpressionAccess().getCurrentTTypeCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__WeakAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeExpressionAccess().getWeakTypeCrossReference_5_0()); }
		(
			{ before(grammarAccess.getTypeExpressionAccess().getWeakTypeIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTypeExpressionAccess().getWeakTypeIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getTypeExpressionAccess().getWeakTypeCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpression__Weak2Assignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeExpressionAccess().getWeak2TypeCrossReference_6_1_0()); }
		(
			{ before(grammarAccess.getTypeExpressionAccess().getWeak2TypeIDTerminalRuleCall_6_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTypeExpressionAccess().getWeak2TypeIDTerminalRuleCall_6_1_0_1()); }
		)
		{ after(grammarAccess.getTypeExpressionAccess().getWeak2TypeCrossReference_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Moves__MoveAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMovesAccess().getMoveMoveParserRuleCall_1_0()); }
		ruleMove
		{ after(grammarAccess.getMovesAccess().getMoveMoveParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMoveAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__ETypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getETypeETypeParserRuleCall_2_0()); }
		ruleEType
		{ after(grammarAccess.getMoveAccess().getETypeETypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__AttAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getAttAltAttributeParserRuleCall_3_0()); }
		ruleAltAttribute
		{ after(grammarAccess.getMoveAccess().getAttAltAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__MEffectAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getMEffectMEffectParserRuleCall_4_0_0()); }
		ruleMEffect
		{ after(grammarAccess.getMoveAccess().getMEffectMEffectParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__BEffectAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getBEffectBEffectParserRuleCall_4_1_0()); }
		ruleBEffect
		{ after(grammarAccess.getMoveAccess().getBEffectBEffectParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__AEffectAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getAEffectAEffectParserRuleCall_4_2_0()); }
		ruleAEffect
		{ after(grammarAccess.getMoveAccess().getAEffectAEffectParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MEffect__MoveENameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMEffectAccess().getMoveENameMoveECrossReference_2_0()); }
		(
			{ before(grammarAccess.getMEffectAccess().getMoveENameMoveEIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMEffectAccess().getMoveENameMoveEIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getMEffectAccess().getMoveENameMoveECrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BEffect__BuffENameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBEffectAccess().getBuffENameBuffCrossReference_2_0()); }
		(
			{ before(grammarAccess.getBEffectAccess().getBuffENameBuffIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getBEffectAccess().getBuffENameBuffIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getBEffectAccess().getBuffENameBuffCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AEffect__AfterENameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAEffectAccess().getAfterENameAfterECrossReference_2_0()); }
		(
			{ before(grammarAccess.getAEffectAccess().getAfterENameAfterEIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAEffectAccess().getAfterENameAfterEIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAEffectAccess().getAfterENameAfterECrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getETypeAccess().getTypeTypeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getETypeAccess().getTypeTypeIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getETypeAccess().getTypeTypeIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getETypeAccess().getTypeTypeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValues__LTypesAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeValuesAccess().getLTypesLegalTypeParserRuleCall_1_0_0()); }
		ruleLegalType
		{ after(grammarAccess.getAttributeValuesAccess().getLTypesLegalTypeParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValues__AnAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeValuesAccess().getAnActualNumbersParserRuleCall_1_1_0()); }
		ruleActualNumbers
		{ after(grammarAccess.getAttributeValuesAccess().getAnActualNumbersParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AltAttribute__AttributeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAltAttributeAccess().getAttributeAttributeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getAltAttributeAccess().getAttributeAttributeIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAltAttributeAccess().getAttributeAttributeIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getAltAttributeAccess().getAttributeAttributeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AltAttribute__AvAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAltAttributeAccess().getAvAttributeValuesParserRuleCall_2_0()); }
		ruleAttributeValues
		{ after(grammarAccess.getAltAttributeAccess().getAvAttributeValuesParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__OrAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getOrORconditionParserRuleCall_0_1_0()); }
		ruleORcondition
		{ after(grammarAccess.getRuleAccess().getOrORconditionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__TargetAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getTargetAttributeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getRuleAccess().getTargetAttributeIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRuleAccess().getTargetAttributeIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getRuleAccess().getTargetAttributeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__SumAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getSumSumParserRuleCall_3_0()); }
		ruleSum
		{ after(grammarAccess.getRuleAccess().getSumSumParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalRule__TargetAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionalRuleAccess().getTargetAttributeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getAdditionalRuleAccess().getTargetAttributeIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAdditionalRuleAccess().getTargetAttributeIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getAdditionalRuleAccess().getTargetAttributeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalRule__SumAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionalRuleAccess().getSumSumParserRuleCall_2_0()); }
		ruleSum
		{ after(grammarAccess.getAdditionalRuleAccess().getSumSumParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalRule__HitsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionalRuleAccess().getHitsUserKeyword_4_0_0()); }
		(
			{ before(grammarAccess.getAdditionalRuleAccess().getHitsUserKeyword_4_0_0()); }
			'user'
			{ after(grammarAccess.getAdditionalRuleAccess().getHitsUserKeyword_4_0_0()); }
		)
		{ after(grammarAccess.getAdditionalRuleAccess().getHitsUserKeyword_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalRule__HitsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionalRuleAccess().getHitsEnemyKeyword_4_1_0()); }
		(
			{ before(grammarAccess.getAdditionalRuleAccess().getHitsEnemyKeyword_4_1_0()); }
			'enemy'
			{ after(grammarAccess.getAdditionalRuleAccess().getHitsEnemyKeyword_4_1_0()); }
		)
		{ after(grammarAccess.getAdditionalRuleAccess().getHitsEnemyKeyword_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalBuffRule__TargetAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionalBuffRuleAccess().getTargetAttributeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getAdditionalBuffRuleAccess().getTargetAttributeIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAdditionalBuffRuleAccess().getTargetAttributeIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getAdditionalBuffRuleAccess().getTargetAttributeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionalBuffRule__SumAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionalBuffRuleAccess().getSumSumParserRuleCall_2_0()); }
		ruleSum
		{ after(grammarAccess.getAdditionalBuffRuleAccess().getSumSumParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entities__EntityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntitiesAccess().getEntityEntityParserRuleCall_1_0()); }
		ruleEntity
		{ after(grammarAccess.getEntitiesAccess().getEntityEntityParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Death__ReqAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeathAccess().getReqRequireParserRuleCall_1_0()); }
		ruleRequire
		{ after(grammarAccess.getDeathAccess().getReqRequireParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__ExtendAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getExtendEntityCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getEntityAccess().getExtendEntityIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEntityAccess().getExtendEntityIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getEntityAccess().getExtendEntityCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__ETypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getETypeETypeParserRuleCall_3_0()); }
		ruleEType
		{ after(grammarAccess.getEntityAccess().getETypeETypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__AttAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getAttAltAttributeParserRuleCall_4_0()); }
		ruleAltAttribute
		{ after(grammarAccess.getEntityAccess().getAttAltAttributeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__EMovesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getEMovesEntityMovesParserRuleCall_5_0()); }
		ruleEntityMoves
		{ after(grammarAccess.getEntityAccess().getEMovesEntityMovesParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityMoves__MoveAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityMovesAccess().getMoveMoveCrossReference_1_0()); }
		(
			{ before(grammarAccess.getEntityMovesAccess().getMoveMoveIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEntityMovesAccess().getMoveMoveIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getEntityMovesAccess().getMoveMoveCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Teams__TeamAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTeamsAccess().getTeamTeamParserRuleCall_1_0()); }
		ruleTeam
		{ after(grammarAccess.getTeamsAccess().getTeamTeamParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Team__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTeamAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTeamAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Team__MembersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTeamAccess().getMembersMembersParserRuleCall_2_0()); }
		ruleMembers
		{ after(grammarAccess.getTeamAccess().getMembersMembersParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Members__EntityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMembersAccess().getEntityEntityCrossReference_1_0()); }
		(
			{ before(grammarAccess.getMembersAccess().getEntityEntityIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMembersAccess().getEntityEntityIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getMembersAccess().getEntityEntityCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__LogAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireAccess().getLogORconditionParserRuleCall_1_0()); }
		ruleORcondition
		{ after(grammarAccess.getRequireAccess().getLogORconditionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ORcondition__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getORconditionAccess().getRightANDconditionParserRuleCall_1_2_0()); }
		ruleANDcondition
		{ after(grammarAccess.getORconditionAccess().getRightANDconditionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ANDcondition__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANDconditionAccess().getRightStatementParserRuleCall_1_2_0()); }
		ruleStatement
		{ after(grammarAccess.getANDconditionAccess().getRightStatementParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberComparing__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberComparingAccess().getLeftSumParserRuleCall_0_0()); }
		ruleSum
		{ after(grammarAccess.getNumberComparingAccess().getLeftSumParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberComparing__CompAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberComparingAccess().getCompComparatorParserRuleCall_1_0()); }
		ruleComparator
		{ after(grammarAccess.getNumberComparingAccess().getCompComparatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberComparing__RightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberComparingAccess().getRightSumParserRuleCall_2_0()); }
		ruleSum
		{ after(grammarAccess.getNumberComparingAccess().getRightSumParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumAccess().getRightMultiplyParserRuleCall_1_1_0()); }
		ruleMultiply
		{ after(grammarAccess.getSumAccess().getRightMultiplyParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiply__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplyAccess().getRightAtomicNumberParserRuleCall_1_1_0()); }
		ruleAtomicNumber
		{ after(grammarAccess.getMultiplyAccess().getRightAtomicNumberParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameAttribute__AttributeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAttributeAccess().getAttributeAttributeCrossReference_0()); }
		(
			{ before(grammarAccess.getNameAttributeAccess().getAttributeAttributeIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNameAttributeAccess().getAttributeAttributeIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getNameAttributeAccess().getAttributeAttributeCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntNum__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntNumAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntNumAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatNum__IAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatNumAccess().getIINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getFloatNumAccess().getIINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatNum__DecimalAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatNumAccess().getDecimalINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getFloatNumAccess().getDecimalINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
